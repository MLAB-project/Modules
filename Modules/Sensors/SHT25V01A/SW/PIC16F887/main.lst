CCS PCM C Compiler, Version 4.106, 47914               13-IV-13 23:28

               Filename: Z:\home\kaklik\MLAB\Modules\Sensors\SHT25V01A\SW\PIC16F887\main.lst

               ROM used: 1145 words (14%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         29 (8%) worst case
               Stack:    2 locations

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   28B
0003:  NOP
.................... #include "main.h" 
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES INTRC                    //Internal RC Osc 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES BORV40                   //Brownout reset at 4.0V 
....................  
.................... #use delay(clock=8000000) 
*
0275:  MOVLW  2F
0276:  MOVWF  04
0277:  BCF    03.7
0278:  MOVF   00,W
0279:  BTFSC  03.2
027A:  GOTO   288
027B:  MOVLW  02
027C:  MOVWF  78
027D:  CLRF   77
027E:  DECFSZ 77,F
027F:  GOTO   27E
0280:  DECFSZ 78,F
0281:  GOTO   27D
0282:  MOVLW  97
0283:  MOVWF  77
0284:  DECFSZ 77,F
0285:  GOTO   284
0286:  DECFSZ 00,F
0287:  GOTO   27B
0288:  BCF    0A.3
0289:  BCF    0A.4
028A:  GOTO   475 (RETURN)
....................  
.................... #use i2c(master, sda=PIN_C4, scl=PIN_C3) 
*
009B:  MOVLW  08
009C:  MOVWF  78
009D:  NOP
009E:  BCF    07.3
009F:  BCF    20.3
00A0:  MOVF   20,W
00A1:  BSF    03.5
00A2:  MOVWF  07
00A3:  NOP
00A4:  BCF    03.5
00A5:  RLF    2E,F
00A6:  BCF    07.4
00A7:  BTFSS  03.0
00A8:  GOTO   0AF
00A9:  BSF    20.4
00AA:  MOVF   20,W
00AB:  BSF    03.5
00AC:  MOVWF  07
00AD:  GOTO   0B3
00AE:  BCF    03.5
00AF:  BCF    20.4
00B0:  MOVF   20,W
00B1:  BSF    03.5
00B2:  MOVWF  07
00B3:  NOP
00B4:  BCF    03.5
00B5:  BSF    20.3
00B6:  MOVF   20,W
00B7:  BSF    03.5
00B8:  MOVWF  07
00B9:  BCF    03.5
00BA:  BTFSS  07.3
00BB:  GOTO   0BA
00BC:  DECFSZ 78,F
00BD:  GOTO   09D
00BE:  NOP
00BF:  BCF    07.3
00C0:  BCF    20.3
00C1:  MOVF   20,W
00C2:  BSF    03.5
00C3:  MOVWF  07
00C4:  NOP
00C5:  BCF    03.5
00C6:  BSF    20.4
00C7:  MOVF   20,W
00C8:  BSF    03.5
00C9:  MOVWF  07
00CA:  NOP
00CB:  NOP
00CC:  BCF    03.5
00CD:  BSF    20.3
00CE:  MOVF   20,W
00CF:  BSF    03.5
00D0:  MOVWF  07
00D1:  BCF    03.5
00D2:  BTFSS  07.3
00D3:  GOTO   0D2
00D4:  CLRF   78
00D5:  NOP
00D6:  BTFSC  07.4
00D7:  BSF    78.0
00D8:  BCF    07.3
00D9:  BCF    20.3
00DA:  MOVF   20,W
00DB:  BSF    03.5
00DC:  MOVWF  07
00DD:  BCF    03.5
00DE:  BCF    07.4
00DF:  BCF    20.4
00E0:  MOVF   20,W
00E1:  BSF    03.5
00E2:  MOVWF  07
00E3:  BCF    03.5
00E4:  RETURN
00E5:  MOVLW  08
00E6:  MOVWF  2F
00E7:  MOVF   77,W
00E8:  MOVWF  30
00E9:  BSF    20.4
00EA:  MOVF   20,W
00EB:  BSF    03.5
00EC:  MOVWF  07
00ED:  NOP
00EE:  BCF    03.5
00EF:  BSF    20.3
00F0:  MOVF   20,W
00F1:  BSF    03.5
00F2:  MOVWF  07
00F3:  BCF    03.5
00F4:  BTFSS  07.3
00F5:  GOTO   0F4
00F6:  BTFSC  07.4
00F7:  BSF    03.0
00F8:  BTFSS  07.4
00F9:  BCF    03.0
00FA:  RLF    78,F
00FB:  NOP
00FC:  BCF    20.3
00FD:  MOVF   20,W
00FE:  BSF    03.5
00FF:  MOVWF  07
0100:  BCF    03.5
0101:  BCF    07.3
0102:  DECFSZ 2F,F
0103:  GOTO   0E9
0104:  BSF    20.4
0105:  MOVF   20,W
0106:  BSF    03.5
0107:  MOVWF  07
0108:  NOP
0109:  BCF    03.5
010A:  BCF    07.4
010B:  MOVF   30,W
010C:  BTFSC  03.2
010D:  GOTO   113
010E:  BCF    20.4
010F:  MOVF   20,W
0110:  BSF    03.5
0111:  MOVWF  07
0112:  BCF    03.5
0113:  NOP
0114:  BSF    20.3
0115:  MOVF   20,W
0116:  BSF    03.5
0117:  MOVWF  07
0118:  BCF    03.5
0119:  BTFSS  07.3
011A:  GOTO   119
011B:  NOP
011C:  BCF    07.3
011D:  BCF    20.3
011E:  MOVF   20,W
011F:  BSF    03.5
0120:  MOVWF  07
0121:  NOP
0122:  BCF    03.5
0123:  BCF    07.4
0124:  BCF    20.4
0125:  MOVF   20,W
0126:  BSF    03.5
0127:  MOVWF  07
0128:  BCF    03.5
0129:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_B3,rcv=PIN_B2,bits=8) //rcv TXD xmit RXD 
*
0031:  BSF    03.5
0032:  BCF    06.3
0033:  BCF    03.5
0034:  BCF    06.3
0035:  MOVLW  08
0036:  MOVWF  78
0037:  GOTO   038
0038:  NOP
0039:  BSF    78.7
003A:  GOTO   049
003B:  BCF    78.7
003C:  RRF    37,F
003D:  BTFSC  03.0
003E:  BSF    06.3
003F:  BTFSS  03.0
0040:  BCF    06.3
0041:  BSF    78.6
0042:  GOTO   049
0043:  BCF    78.6
0044:  DECFSZ 78,F
0045:  GOTO   03C
0046:  GOTO   047
0047:  NOP
0048:  BSF    06.3
0049:  MOVLW  3F
004A:  MOVWF  04
004B:  DECFSZ 04,F
004C:  GOTO   04B
004D:  NOP
004E:  BTFSC  78.7
004F:  GOTO   03B
0050:  BTFSC  78.6
0051:  GOTO   043
0052:  RETURN
....................  
....................  
....................  
.................... void main() 
.................... { 
*
028B:  CLRF   04
028C:  BCF    03.7
028D:  MOVLW  1F
028E:  ANDWF  03,F
028F:  MOVLW  71
0290:  BSF    03.5
0291:  MOVWF  0F
0292:  MOVF   0F,W
0293:  BCF    06.3
0294:  BCF    03.5
0295:  BSF    06.3
0296:  BSF    03.5
0297:  BSF    03.6
0298:  MOVF   09,W
0299:  ANDLW  C0
029A:  MOVWF  09
029B:  BCF    03.6
029C:  BCF    1F.4
029D:  BCF    1F.5
029E:  MOVLW  00
029F:  BSF    03.6
02A0:  MOVWF  08
02A1:  BCF    03.5
02A2:  CLRF   07
02A3:  CLRF   08
02A4:  CLRF   09
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
*
02A8:  BSF    03.5
02A9:  BSF    03.6
02AA:  MOVF   09,W
02AB:  ANDLW  C0
02AC:  MOVWF  09
02AD:  BCF    03.6
02AE:  BCF    1F.4
02AF:  BCF    1F.5
02B0:  MOVLW  00
02B1:  BSF    03.6
02B2:  MOVWF  08
....................    setup_adc(ADC_CLOCK_DIV_2); 
02B3:  BCF    03.5
02B4:  BCF    03.6
02B5:  BCF    1F.6
02B6:  BCF    1F.7
02B7:  BSF    03.5
02B8:  BCF    1F.7
02B9:  BCF    03.5
02BA:  BSF    1F.0
....................    setup_spi(SPI_SS_DISABLED); 
02BB:  BCF    14.5
02BC:  BCF    20.5
02BD:  MOVF   20,W
02BE:  BSF    03.5
02BF:  MOVWF  07
02C0:  BCF    03.5
02C1:  BSF    20.4
02C2:  MOVF   20,W
02C3:  BSF    03.5
02C4:  MOVWF  07
02C5:  BCF    03.5
02C6:  BCF    20.3
02C7:  MOVF   20,W
02C8:  BSF    03.5
02C9:  MOVWF  07
02CA:  MOVLW  01
02CB:  BCF    03.5
02CC:  MOVWF  14
02CD:  MOVLW  00
02CE:  BSF    03.5
02CF:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
02D0:  MOVF   01,W
02D1:  ANDLW  C7
02D2:  IORLW  08
02D3:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
02D4:  BCF    03.5
02D5:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
02D6:  MOVLW  00
02D7:  MOVWF  78
02D8:  MOVWF  12
02D9:  MOVLW  00
02DA:  BSF    03.5
02DB:  MOVWF  12
....................    setup_ccp1(CCP_OFF); 
02DC:  BCF    03.5
02DD:  BSF    20.2
02DE:  MOVF   20,W
02DF:  BSF    03.5
02E0:  MOVWF  07
02E1:  BCF    03.5
02E2:  CLRF   17
02E3:  BSF    03.5
02E4:  CLRF   1B
02E5:  CLRF   1C
02E6:  MOVLW  01
02E7:  MOVWF  1D
....................    setup_comparator(NC_NC_NC_NC);// This device COMP currently not supported by the PICWizard 
02E8:  BCF    03.5
02E9:  BSF    03.6
02EA:  CLRF   07
02EB:  CLRF   08
02EC:  CLRF   09
....................  
.................... printf("Simple Thermomether  \r\n",); 
02ED:  MOVLW  04
02EE:  MOVWF  0D
02EF:  MOVLW  00
02F0:  MOVWF  0F
02F1:  BCF    03.6
02F2:  GOTO   053
....................  
.................... int16 data1, data2, data3; 
....................  
.................... int XL,XH,YL,YH,ZL,ZH; 
....................    
....................   while(TRUE) 
....................  {  
....................  
.................... data1=0; 
02F3:  CLRF   22
02F4:  CLRF   21
.................... data2=0 ; 
02F5:  CLRF   24
02F6:  CLRF   23
....................  
....................  
.................... //akcelerometr 
....................    int1 ack; 
....................    i2c_start();            // If the write command is acknowledged, 
02F7:  BSF    20.4
02F8:  MOVF   20,W
02F9:  BSF    03.5
02FA:  MOVWF  07
02FB:  NOP
02FC:  BCF    03.5
02FD:  BSF    20.3
02FE:  MOVF   20,W
02FF:  BSF    03.5
0300:  MOVWF  07
0301:  NOP
0302:  BCF    03.5
0303:  BCF    07.4
0304:  BCF    20.4
0305:  MOVF   20,W
0306:  BSF    03.5
0307:  MOVWF  07
0308:  NOP
0309:  BCF    03.5
030A:  BCF    07.3
030B:  BCF    20.3
030C:  MOVF   20,W
030D:  BSF    03.5
030E:  MOVWF  07
....................    ack = i2c_write(0x81);//hen the device is ready. 
030F:  MOVLW  81
0310:  BCF    03.5
0311:  MOVWF  2E
0312:  CALL   09B
0313:  MOVF   78,W
0314:  BCF    2D.0
0315:  BTFSC  78.0
0316:  BSF    2D.0
....................    i2c_stop(); 
0317:  BCF    20.4
0318:  MOVF   20,W
0319:  BSF    03.5
031A:  MOVWF  07
031B:  NOP
031C:  BCF    03.5
031D:  BSF    20.3
031E:  MOVF   20,W
031F:  BSF    03.5
0320:  MOVWF  07
0321:  BCF    03.5
0322:  BTFSS  07.3
0323:  GOTO   322
0324:  NOP
0325:  GOTO   326
0326:  NOP
0327:  BSF    20.4
0328:  MOVF   20,W
0329:  BSF    03.5
032A:  MOVWF  07
032B:  NOP
....................   ack=!ack; 
032C:  MOVLW  01
032D:  BCF    03.5
032E:  XORWF  2D,F
....................     
....................     
....................     
....................    i2c_stop(); //T 
032F:  BCF    20.4
0330:  MOVF   20,W
0331:  BSF    03.5
0332:  MOVWF  07
0333:  NOP
0334:  BCF    03.5
0335:  BSF    20.3
0336:  MOVF   20,W
0337:  BSF    03.5
0338:  MOVWF  07
0339:  BCF    03.5
033A:  BTFSS  07.3
033B:  GOTO   33A
033C:  NOP
033D:  GOTO   33E
033E:  NOP
033F:  BSF    20.4
0340:  MOVF   20,W
0341:  BSF    03.5
0342:  MOVWF  07
0343:  NOP
....................  
....................    i2c_start(); 
0344:  BCF    03.5
0345:  BSF    20.4
0346:  MOVF   20,W
0347:  BSF    03.5
0348:  MOVWF  07
0349:  NOP
034A:  BCF    03.5
034B:  BSF    20.3
034C:  MOVF   20,W
034D:  BSF    03.5
034E:  MOVWF  07
034F:  NOP
0350:  BCF    03.5
0351:  BCF    07.4
0352:  BCF    20.4
0353:  MOVF   20,W
0354:  BSF    03.5
0355:  MOVWF  07
0356:  NOP
0357:  BCF    03.5
0358:  BCF    07.3
0359:  BCF    20.3
035A:  MOVF   20,W
035B:  BSF    03.5
035C:  MOVWF  07
....................    I2C_Write(0x80); 
035D:  MOVLW  80
035E:  BCF    03.5
035F:  MOVWF  2E
0360:  CALL   09B
....................    I2C_write(0xF3); 
0361:  MOVLW  F3
0362:  MOVWF  2E
0363:  CALL   09B
.................... // i2c_stop(); 
....................    i2c_start(); 
0364:  BSF    20.4
0365:  MOVF   20,W
0366:  BSF    03.5
0367:  MOVWF  07
0368:  NOP
0369:  BCF    03.5
036A:  BSF    20.3
036B:  MOVF   20,W
036C:  BSF    03.5
036D:  MOVWF  07
036E:  NOP
036F:  BCF    03.5
0370:  BTFSS  07.3
0371:  GOTO   370
0372:  BCF    07.4
0373:  BCF    20.4
0374:  MOVF   20,W
0375:  BSF    03.5
0376:  MOVWF  07
0377:  NOP
0378:  BCF    03.5
0379:  BCF    07.3
037A:  BCF    20.3
037B:  MOVF   20,W
037C:  BSF    03.5
037D:  MOVWF  07
....................    I2C_Write(0x81); 
037E:  MOVLW  81
037F:  BCF    03.5
0380:  MOVWF  2E
0381:  CALL   09B
....................  XH=i2c_read(0); 
0382:  CLRF   77
0383:  CALL   0E5
0384:  MOVF   78,W
0385:  MOVWF  28
....................  XL=i2c_read(0); 
0386:  CLRF   77
0387:  CALL   0E5
0388:  MOVF   78,W
0389:  MOVWF  27
....................    i2c_stop();  
038A:  BCF    20.4
038B:  MOVF   20,W
038C:  BSF    03.5
038D:  MOVWF  07
038E:  NOP
038F:  BCF    03.5
0390:  BSF    20.3
0391:  MOVF   20,W
0392:  BSF    03.5
0393:  MOVWF  07
0394:  BCF    03.5
0395:  BTFSS  07.3
0396:  GOTO   395
0397:  NOP
0398:  GOTO   399
0399:  NOP
039A:  BSF    20.4
039B:  MOVF   20,W
039C:  BSF    03.5
039D:  MOVWF  07
039E:  NOP
....................  
....................    
.................... i2c_start();   //RH 
039F:  BCF    03.5
03A0:  BSF    20.4
03A1:  MOVF   20,W
03A2:  BSF    03.5
03A3:  MOVWF  07
03A4:  NOP
03A5:  BCF    03.5
03A6:  BSF    20.3
03A7:  MOVF   20,W
03A8:  BSF    03.5
03A9:  MOVWF  07
03AA:  NOP
03AB:  BCF    03.5
03AC:  BCF    07.4
03AD:  BCF    20.4
03AE:  MOVF   20,W
03AF:  BSF    03.5
03B0:  MOVWF  07
03B1:  NOP
03B2:  BCF    03.5
03B3:  BCF    07.3
03B4:  BCF    20.3
03B5:  MOVF   20,W
03B6:  BSF    03.5
03B7:  MOVWF  07
....................    I2C_Write(0x80); 
03B8:  MOVLW  80
03B9:  BCF    03.5
03BA:  MOVWF  2E
03BB:  CALL   09B
....................    I2C_write(0xF5); 
03BC:  MOVLW  F5
03BD:  MOVWF  2E
03BE:  CALL   09B
.................... // i2c_stop(); 
....................    i2c_start(); 
03BF:  BSF    20.4
03C0:  MOVF   20,W
03C1:  BSF    03.5
03C2:  MOVWF  07
03C3:  NOP
03C4:  BCF    03.5
03C5:  BSF    20.3
03C6:  MOVF   20,W
03C7:  BSF    03.5
03C8:  MOVWF  07
03C9:  NOP
03CA:  BCF    03.5
03CB:  BTFSS  07.3
03CC:  GOTO   3CB
03CD:  BCF    07.4
03CE:  BCF    20.4
03CF:  MOVF   20,W
03D0:  BSF    03.5
03D1:  MOVWF  07
03D2:  NOP
03D3:  BCF    03.5
03D4:  BCF    07.3
03D5:  BCF    20.3
03D6:  MOVF   20,W
03D7:  BSF    03.5
03D8:  MOVWF  07
....................    I2C_Write(0x81); 
03D9:  MOVLW  81
03DA:  BCF    03.5
03DB:  MOVWF  2E
03DC:  CALL   09B
....................    YH=i2c_read(0); 
03DD:  CLRF   77
03DE:  CALL   0E5
03DF:  MOVF   78,W
03E0:  MOVWF  2A
....................    YL=i2c_read(0); 
03E1:  CLRF   77
03E2:  CALL   0E5
03E3:  MOVF   78,W
03E4:  MOVWF  29
....................    i2c_stop();   
03E5:  BCF    20.4
03E6:  MOVF   20,W
03E7:  BSF    03.5
03E8:  MOVWF  07
03E9:  NOP
03EA:  BCF    03.5
03EB:  BSF    20.3
03EC:  MOVF   20,W
03ED:  BSF    03.5
03EE:  MOVWF  07
03EF:  BCF    03.5
03F0:  BTFSS  07.3
03F1:  GOTO   3F0
03F2:  NOP
03F3:  GOTO   3F4
03F4:  NOP
03F5:  BSF    20.4
03F6:  MOVF   20,W
03F7:  BSF    03.5
03F8:  MOVWF  07
03F9:  NOP
....................     
....................  
....................     
.................... data1 = (((unsigned int16) XH << 8) + XL>>2 ); 
03FA:  BCF    03.5
03FB:  CLRF   2F
03FC:  MOVF   28,W
03FD:  MOVWF  2E
03FE:  MOVWF  2F
03FF:  CLRF   2E
0400:  MOVF   27,W
0401:  ADDWF  2E,F
0402:  BTFSC  03.0
0403:  INCF   2F,F
0404:  RRF    2F,W
0405:  MOVWF  22
0406:  RRF    2E,W
0407:  MOVWF  21
0408:  RRF    22,F
0409:  RRF    21,F
040A:  MOVLW  3F
040B:  ANDWF  22,F
.................... data2 = (((unsigned int16) YH << 8) + YL>>2); 
040C:  CLRF   2F
040D:  MOVF   2A,W
040E:  MOVWF  2E
040F:  MOVWF  2F
0410:  CLRF   2E
0411:  MOVF   29,W
0412:  ADDWF  2E,F
0413:  BTFSC  03.0
0414:  INCF   2F,F
0415:  RRF    2F,W
0416:  MOVWF  24
0417:  RRF    2E,W
0418:  MOVWF  23
0419:  RRF    24,F
041A:  RRF    23,F
041B:  MOVLW  3F
041C:  ANDWF  24,F
....................  
....................  
.................... printf("Stav: %d (procenta)\r\n", ack); 
041D:  MOVLW  00
041E:  BTFSC  2D.0
041F:  MOVLW  01
0420:  MOVWF  2E
0421:  MOVLW  10
0422:  BSF    03.6
0423:  MOVWF  0D
0424:  MOVLW  00
0425:  MOVWF  0F
0426:  BCF    03.0
0427:  MOVLW  06
0428:  BCF    03.6
0429:  MOVWF  2F
042A:  CALL   12A
042B:  MOVF   2E,W
042C:  MOVWF  2F
042D:  MOVLW  1F
042E:  MOVWF  30
042F:  GOTO   18E
0430:  MOVLW  14
0431:  BSF    03.6
0432:  MOVWF  0D
0433:  MOVLW  00
0434:  MOVWF  0F
0435:  BCF    03.0
0436:  MOVLW  0D
0437:  BCF    03.6
0438:  MOVWF  2F
0439:  CALL   12A
....................  
.................... printf("Stav: %Ld(procenta)\r\n", data1); 
043A:  MOVLW  1B
043B:  BSF    03.6
043C:  MOVWF  0D
043D:  MOVLW  00
043E:  MOVWF  0F
043F:  BCF    03.0
0440:  MOVLW  06
0441:  BCF    03.6
0442:  MOVWF  2F
0443:  CALL   12A
0444:  MOVLW  10
0445:  MOVWF  04
0446:  MOVF   22,W
0447:  MOVWF  2F
0448:  MOVF   21,W
0449:  MOVWF  2E
044A:  CALL   1F5
044B:  MOVLW  1F
044C:  BSF    03.6
044D:  MOVWF  0D
044E:  MOVLW  00
044F:  MOVWF  0F
0450:  BSF    03.0
0451:  MOVLW  0C
0452:  BCF    03.6
0453:  MOVWF  2F
0454:  CALL   12A
.................... printf("Stav: %Ld(procenta)\r\n", data2); 
0455:  MOVLW  26
0456:  BSF    03.6
0457:  MOVWF  0D
0458:  MOVLW  00
0459:  MOVWF  0F
045A:  BCF    03.0
045B:  MOVLW  06
045C:  BCF    03.6
045D:  MOVWF  2F
045E:  CALL   12A
045F:  MOVLW  10
0460:  MOVWF  04
0461:  MOVF   24,W
0462:  MOVWF  2F
0463:  MOVF   23,W
0464:  MOVWF  2E
0465:  CALL   1F5
0466:  MOVLW  2A
0467:  BSF    03.6
0468:  MOVWF  0D
0469:  MOVLW  00
046A:  MOVWF  0F
046B:  BSF    03.0
046C:  MOVLW  0C
046D:  BCF    03.6
046E:  MOVWF  2F
046F:  CALL   12A
....................  
.................... delay_ms (2000); 
0470:  MOVLW  08
0471:  MOVWF  2E
0472:  MOVLW  FA
0473:  MOVWF  2F
0474:  GOTO   275
0475:  DECFSZ 2E,F
0476:  GOTO   472
....................  
....................  }  
0477:  GOTO   2F3
.................... } 
....................  
0478:  SLEEP

Configuration Fuses:
   Word  1: 2CF5   INTRC NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
