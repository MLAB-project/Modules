CCS PCM C Compiler, Version 4.106, 47914               22-4-13 22:26

               Filename: C:\Users\Honza\Documents\pic\I2C_bat_pam\Min_V_cl\main.lst

               ROM used: 1307 words (16%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         22 (6%) worst case
               Stack:    2 locations

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   19B
0003:  NOP
.................... #include "C:\Users\Honza\Documents\pic\I2C_bat_pam\Min_V_cl\main.h" 
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES INTRC                 	//Internal RC Osc 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES BORV40                	//Brownout reset at 4.0V 
....................  
.................... #use delay(clock=8000000) 
*
00D0:  MOVLW  2C
00D1:  MOVWF  04
00D2:  BCF    03.7
00D3:  MOVF   00,W
00D4:  BTFSC  03.2
00D5:  GOTO   0E3
00D6:  MOVLW  02
00D7:  MOVWF  78
00D8:  CLRF   77
00D9:  DECFSZ 77,F
00DA:  GOTO   0D9
00DB:  DECFSZ 78,F
00DC:  GOTO   0D8
00DD:  MOVLW  97
00DE:  MOVWF  77
00DF:  DECFSZ 77,F
00E0:  GOTO   0DF
00E1:  DECFSZ 00,F
00E2:  GOTO   0D6
00E3:  RETURN
....................  
....................  
....................  
....................  
....................  
.................... #define EEPROM_SDA  PIN_C4 
.................... #define EEPROM_SCL  PIN_C3 
.................... #use i2c(master, sda=EEPROM_SDA, scl=EEPROM_SCL) 
*
0086:  MOVLW  08
0087:  MOVWF  78
0088:  NOP
0089:  BCF    07.3
008A:  BCF    20.3
008B:  MOVF   20,W
008C:  BSF    03.5
008D:  MOVWF  07
008E:  NOP
008F:  BCF    03.5
0090:  RLF    2C,F
0091:  BCF    07.4
0092:  BTFSS  03.0
0093:  GOTO   09A
0094:  BSF    20.4
0095:  MOVF   20,W
0096:  BSF    03.5
0097:  MOVWF  07
0098:  GOTO   09E
0099:  BCF    03.5
009A:  BCF    20.4
009B:  MOVF   20,W
009C:  BSF    03.5
009D:  MOVWF  07
009E:  NOP
009F:  BCF    03.5
00A0:  BSF    20.3
00A1:  MOVF   20,W
00A2:  BSF    03.5
00A3:  MOVWF  07
00A4:  BCF    03.5
00A5:  BTFSS  07.3
00A6:  GOTO   0A5
00A7:  DECFSZ 78,F
00A8:  GOTO   088
00A9:  NOP
00AA:  BCF    07.3
00AB:  BCF    20.3
00AC:  MOVF   20,W
00AD:  BSF    03.5
00AE:  MOVWF  07
00AF:  NOP
00B0:  BCF    03.5
00B1:  BSF    20.4
00B2:  MOVF   20,W
00B3:  BSF    03.5
00B4:  MOVWF  07
00B5:  NOP
00B6:  NOP
00B7:  BCF    03.5
00B8:  BSF    20.3
00B9:  MOVF   20,W
00BA:  BSF    03.5
00BB:  MOVWF  07
00BC:  BCF    03.5
00BD:  BTFSS  07.3
00BE:  GOTO   0BD
00BF:  CLRF   78
00C0:  NOP
00C1:  BTFSC  07.4
00C2:  BSF    78.0
00C3:  BCF    07.3
00C4:  BCF    20.3
00C5:  MOVF   20,W
00C6:  BSF    03.5
00C7:  MOVWF  07
00C8:  BCF    03.5
00C9:  BCF    07.4
00CA:  BCF    20.4
00CB:  MOVF   20,W
00CC:  BSF    03.5
00CD:  MOVWF  07
00CE:  BCF    03.5
00CF:  RETURN
*
00E4:  MOVLW  08
00E5:  MOVWF  2D
00E6:  MOVF   77,W
00E7:  MOVWF  2E
00E8:  BSF    20.4
00E9:  MOVF   20,W
00EA:  BSF    03.5
00EB:  MOVWF  07
00EC:  NOP
00ED:  BCF    03.5
00EE:  BSF    20.3
00EF:  MOVF   20,W
00F0:  BSF    03.5
00F1:  MOVWF  07
00F2:  BCF    03.5
00F3:  BTFSS  07.3
00F4:  GOTO   0F3
00F5:  BTFSC  07.4
00F6:  BSF    03.0
00F7:  BTFSS  07.4
00F8:  BCF    03.0
00F9:  RLF    78,F
00FA:  NOP
00FB:  BCF    20.3
00FC:  MOVF   20,W
00FD:  BSF    03.5
00FE:  MOVWF  07
00FF:  BCF    03.5
0100:  BCF    07.3
0101:  DECFSZ 2D,F
0102:  GOTO   0E8
0103:  BSF    20.4
0104:  MOVF   20,W
0105:  BSF    03.5
0106:  MOVWF  07
0107:  NOP
0108:  BCF    03.5
0109:  BCF    07.4
010A:  MOVF   2E,W
010B:  BTFSC  03.2
010C:  GOTO   112
010D:  BCF    20.4
010E:  MOVF   20,W
010F:  BSF    03.5
0110:  MOVWF  07
0111:  BCF    03.5
0112:  NOP
0113:  BSF    20.3
0114:  MOVF   20,W
0115:  BSF    03.5
0116:  MOVWF  07
0117:  BCF    03.5
0118:  BTFSS  07.3
0119:  GOTO   118
011A:  NOP
011B:  BCF    07.3
011C:  BCF    20.3
011D:  MOVF   20,W
011E:  BSF    03.5
011F:  MOVWF  07
0120:  NOP
0121:  BCF    03.5
0122:  BCF    07.4
0123:  BCF    20.4
0124:  MOVF   20,W
0125:  BSF    03.5
0126:  MOVWF  07
0127:  BCF    03.5
0128:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C7,rcv=PIN_C6,bits=8) //rcv TXD xmit RXD 
*
001A:  BCF    20.7
001B:  MOVF   20,W
001C:  BSF    03.5
001D:  MOVWF  07
001E:  BCF    03.5
001F:  BCF    07.7
0020:  MOVLW  08
0021:  MOVWF  78
0022:  GOTO   023
0023:  NOP
0024:  BSF    78.7
0025:  GOTO   034
0026:  BCF    78.7
0027:  RRF    30,F
0028:  BTFSC  03.0
0029:  BSF    07.7
002A:  BTFSS  03.0
002B:  BCF    07.7
002C:  BSF    78.6
002D:  GOTO   034
002E:  BCF    78.6
002F:  DECFSZ 78,F
0030:  GOTO   027
0031:  GOTO   032
0032:  NOP
0033:  BSF    07.7
0034:  MOVLW  3F
0035:  MOVWF  04
0036:  DECFSZ 04,F
0037:  GOTO   036
0038:  NOP
0039:  BTFSC  78.7
003A:  GOTO   026
003B:  BTFSC  78.6
003C:  GOTO   02E
003D:  RETURN
....................  
....................  
.................... void main() 
.................... { 
*
019B:  CLRF   04
019C:  BCF    03.7
019D:  MOVLW  1F
019E:  ANDWF  03,F
019F:  MOVLW  71
01A0:  BSF    03.5
01A1:  MOVWF  0F
01A2:  MOVF   0F,W
01A3:  BCF    03.5
01A4:  BCF    20.7
01A5:  MOVF   20,W
01A6:  BSF    03.5
01A7:  MOVWF  07
01A8:  BCF    03.5
01A9:  BSF    07.7
01AA:  BSF    03.5
01AB:  BSF    03.6
01AC:  MOVF   09,W
01AD:  ANDLW  C0
01AE:  MOVWF  09
01AF:  BCF    03.6
01B0:  BCF    1F.4
01B1:  BCF    1F.5
01B2:  MOVLW  00
01B3:  BSF    03.6
01B4:  MOVWF  08
01B5:  BCF    03.5
01B6:  CLRF   07
01B7:  CLRF   08
01B8:  CLRF   09
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
*
01BC:  BSF    03.5
01BD:  BSF    03.6
01BE:  MOVF   09,W
01BF:  ANDLW  C0
01C0:  MOVWF  09
01C1:  BCF    03.6
01C2:  BCF    1F.4
01C3:  BCF    1F.5
01C4:  MOVLW  00
01C5:  BSF    03.6
01C6:  MOVWF  08
....................    setup_adc(ADC_CLOCK_DIV_2); 
01C7:  BCF    03.5
01C8:  BCF    03.6
01C9:  BCF    1F.6
01CA:  BCF    1F.7
01CB:  BSF    03.5
01CC:  BCF    1F.7
01CD:  BCF    03.5
01CE:  BSF    1F.0
....................    setup_spi(SPI_SS_DISABLED); 
01CF:  BCF    14.5
01D0:  BCF    20.5
01D1:  MOVF   20,W
01D2:  BSF    03.5
01D3:  MOVWF  07
01D4:  BCF    03.5
01D5:  BSF    20.4
01D6:  MOVF   20,W
01D7:  BSF    03.5
01D8:  MOVWF  07
01D9:  BCF    03.5
01DA:  BCF    20.3
01DB:  MOVF   20,W
01DC:  BSF    03.5
01DD:  MOVWF  07
01DE:  MOVLW  01
01DF:  BCF    03.5
01E0:  MOVWF  14
01E1:  MOVLW  00
01E2:  BSF    03.5
01E3:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
01E4:  MOVF   01,W
01E5:  ANDLW  C7
01E6:  IORLW  08
01E7:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
01E8:  BCF    03.5
01E9:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
01EA:  MOVLW  00
01EB:  MOVWF  78
01EC:  MOVWF  12
01ED:  MOVLW  00
01EE:  BSF    03.5
01EF:  MOVWF  12
....................    setup_ccp1(CCP_OFF); 
01F0:  BCF    03.5
01F1:  BSF    20.2
01F2:  MOVF   20,W
01F3:  BSF    03.5
01F4:  MOVWF  07
01F5:  BCF    03.5
01F6:  CLRF   17
01F7:  BSF    03.5
01F8:  CLRF   1B
01F9:  CLRF   1C
01FA:  MOVLW  01
01FB:  MOVWF  1D
....................    setup_comparator(NC_NC_NC_NC);// This device COMP currently not supported by the PICWizard 
01FC:  BCF    03.5
01FD:  BSF    03.6
01FE:  CLRF   07
01FF:  CLRF   08
0200:  CLRF   09
....................  
.................... printf("Simple Thermomether  \r\n",); 
0201:  MOVLW  04
0202:  MOVWF  0D
0203:  MOVLW  00
0204:  MOVWF  0F
0205:  BCF    03.6
0206:  GOTO   03E
.................... unsigned int8 STAV1,STAV2; 
....................  
.................... unsigned int16 SOUCET, SOUCET1; 
.................... unsigned int8 LSB=0,ZK,k=0,VH,VL; 
0207:  CLRF   27
0208:  CLRF   29
.................... //unsigned int8   
....................    
....................  while(TRUE) 
....................  {  
....................     
....................     
....................  
....................  
....................    i2c_start(); //blockdatacontrol 
0209:  BSF    20.4
020A:  MOVF   20,W
020B:  BSF    03.5
020C:  MOVWF  07
020D:  NOP
020E:  BCF    03.5
020F:  BSF    20.3
0210:  MOVF   20,W
0211:  BSF    03.5
0212:  MOVWF  07
0213:  NOP
0214:  BCF    03.5
0215:  BCF    07.4
0216:  BCF    20.4
0217:  MOVF   20,W
0218:  BSF    03.5
0219:  MOVWF  07
021A:  NOP
021B:  BCF    03.5
021C:  BCF    07.3
021D:  BCF    20.3
021E:  MOVF   20,W
021F:  BSF    03.5
0220:  MOVWF  07
....................    I2C_Write(0xAA); 
0221:  MOVLW  AA
0222:  BCF    03.5
0223:  MOVWF  2C
0224:  CALL   086
....................    I2C_write(0x61); 
0225:  MOVLW  61
0226:  MOVWF  2C
0227:  CALL   086
....................    i2c_start(); 
0228:  BSF    20.4
0229:  MOVF   20,W
022A:  BSF    03.5
022B:  MOVWF  07
022C:  NOP
022D:  BCF    03.5
022E:  BSF    20.3
022F:  MOVF   20,W
0230:  BSF    03.5
0231:  MOVWF  07
0232:  NOP
0233:  BCF    03.5
0234:  BTFSS  07.3
0235:  GOTO   234
0236:  BCF    07.4
0237:  BCF    20.4
0238:  MOVF   20,W
0239:  BSF    03.5
023A:  MOVWF  07
023B:  NOP
023C:  BCF    03.5
023D:  BCF    07.3
023E:  BCF    20.3
023F:  MOVF   20,W
0240:  BSF    03.5
0241:  MOVWF  07
....................    I2C_Write(0xAA); 
0242:  MOVLW  AA
0243:  BCF    03.5
0244:  MOVWF  2C
0245:  CALL   086
....................    i2c_write(0x00); 
0246:  CLRF   2C
0247:  CALL   086
....................    i2c_stop();  
0248:  BCF    20.4
0249:  MOVF   20,W
024A:  BSF    03.5
024B:  MOVWF  07
024C:  NOP
024D:  BCF    03.5
024E:  BSF    20.3
024F:  MOVF   20,W
0250:  BSF    03.5
0251:  MOVWF  07
0252:  BCF    03.5
0253:  BTFSS  07.3
0254:  GOTO   253
0255:  NOP
0256:  GOTO   257
0257:  NOP
0258:  BSF    20.4
0259:  MOVF   20,W
025A:  BSF    03.5
025B:  MOVWF  07
025C:  NOP
....................    delay_ms (1); 
025D:  MOVLW  01
025E:  BCF    03.5
025F:  MOVWF  2C
0260:  CALL   0D0
....................  
....................  
....................    i2c_start();//dataflashclass  
0261:  BSF    20.4
0262:  MOVF   20,W
0263:  BSF    03.5
0264:  MOVWF  07
0265:  NOP
0266:  BCF    03.5
0267:  BSF    20.3
0268:  MOVF   20,W
0269:  BSF    03.5
026A:  MOVWF  07
026B:  NOP
026C:  BCF    03.5
026D:  BCF    07.4
026E:  BCF    20.4
026F:  MOVF   20,W
0270:  BSF    03.5
0271:  MOVWF  07
0272:  NOP
0273:  BCF    03.5
0274:  BCF    07.3
0275:  BCF    20.3
0276:  MOVF   20,W
0277:  BSF    03.5
0278:  MOVWF  07
....................    I2C_Write(0xAA); 
0279:  MOVLW  AA
027A:  BCF    03.5
027B:  MOVWF  2C
027C:  CALL   086
....................    I2C_write(0x3e); 
027D:  MOVLW  3E
027E:  MOVWF  2C
027F:  CALL   086
....................     
....................    i2c_start(); 
0280:  BSF    20.4
0281:  MOVF   20,W
0282:  BSF    03.5
0283:  MOVWF  07
0284:  NOP
0285:  BCF    03.5
0286:  BSF    20.3
0287:  MOVF   20,W
0288:  BSF    03.5
0289:  MOVWF  07
028A:  NOP
028B:  BCF    03.5
028C:  BTFSS  07.3
028D:  GOTO   28C
028E:  BCF    07.4
028F:  BCF    20.4
0290:  MOVF   20,W
0291:  BSF    03.5
0292:  MOVWF  07
0293:  NOP
0294:  BCF    03.5
0295:  BCF    07.3
0296:  BCF    20.3
0297:  MOVF   20,W
0298:  BSF    03.5
0299:  MOVWF  07
....................    I2C_Write(0xAA); 
029A:  MOVLW  AA
029B:  BCF    03.5
029C:  MOVWF  2C
029D:  CALL   086
....................    i2c_write(0x50); 
029E:  MOVLW  50
029F:  MOVWF  2C
02A0:  CALL   086
....................    i2c_stop();  
02A1:  BCF    20.4
02A2:  MOVF   20,W
02A3:  BSF    03.5
02A4:  MOVWF  07
02A5:  NOP
02A6:  BCF    03.5
02A7:  BSF    20.3
02A8:  MOVF   20,W
02A9:  BSF    03.5
02AA:  MOVWF  07
02AB:  BCF    03.5
02AC:  BTFSS  07.3
02AD:  GOTO   2AC
02AE:  NOP
02AF:  GOTO   2B0
02B0:  NOP
02B1:  BSF    20.4
02B2:  MOVF   20,W
02B3:  BSF    03.5
02B4:  MOVWF  07
02B5:  NOP
....................    delay_ms (1); 
02B6:  MOVLW  01
02B7:  BCF    03.5
02B8:  MOVWF  2C
02B9:  CALL   0D0
....................   
....................   
....................   i2c_start();//dataflashblock 
02BA:  BSF    20.4
02BB:  MOVF   20,W
02BC:  BSF    03.5
02BD:  MOVWF  07
02BE:  NOP
02BF:  BCF    03.5
02C0:  BSF    20.3
02C1:  MOVF   20,W
02C2:  BSF    03.5
02C3:  MOVWF  07
02C4:  NOP
02C5:  BCF    03.5
02C6:  BCF    07.4
02C7:  BCF    20.4
02C8:  MOVF   20,W
02C9:  BSF    03.5
02CA:  MOVWF  07
02CB:  NOP
02CC:  BCF    03.5
02CD:  BCF    07.3
02CE:  BCF    20.3
02CF:  MOVF   20,W
02D0:  BSF    03.5
02D1:  MOVWF  07
....................    I2C_Write(0xAA); 
02D2:  MOVLW  AA
02D3:  BCF    03.5
02D4:  MOVWF  2C
02D5:  CALL   086
....................    I2C_write(0x3f); 
02D6:  MOVLW  3F
02D7:  MOVWF  2C
02D8:  CALL   086
....................     
....................    i2c_start(); 
02D9:  BSF    20.4
02DA:  MOVF   20,W
02DB:  BSF    03.5
02DC:  MOVWF  07
02DD:  NOP
02DE:  BCF    03.5
02DF:  BSF    20.3
02E0:  MOVF   20,W
02E1:  BSF    03.5
02E2:  MOVWF  07
02E3:  NOP
02E4:  BCF    03.5
02E5:  BTFSS  07.3
02E6:  GOTO   2E5
02E7:  BCF    07.4
02E8:  BCF    20.4
02E9:  MOVF   20,W
02EA:  BSF    03.5
02EB:  MOVWF  07
02EC:  NOP
02ED:  BCF    03.5
02EE:  BCF    07.3
02EF:  BCF    20.3
02F0:  MOVF   20,W
02F1:  BSF    03.5
02F2:  MOVWF  07
....................    I2C_Write(0xAA); 
02F3:  MOVLW  AA
02F4:  BCF    03.5
02F5:  MOVWF  2C
02F6:  CALL   086
....................    I2C_write(0x02); 
02F7:  MOVLW  02
02F8:  MOVWF  2C
02F9:  CALL   086
....................    i2c_stop();  
02FA:  BCF    20.4
02FB:  MOVF   20,W
02FC:  BSF    03.5
02FD:  MOVWF  07
02FE:  NOP
02FF:  BCF    03.5
0300:  BSF    20.3
0301:  MOVF   20,W
0302:  BSF    03.5
0303:  MOVWF  07
0304:  BCF    03.5
0305:  BTFSS  07.3
0306:  GOTO   305
0307:  NOP
0308:  GOTO   309
0309:  NOP
030A:  BSF    20.4
030B:  MOVF   20,W
030C:  BSF    03.5
030D:  MOVWF  07
030E:  NOP
....................   
....................  delay_ms (1); 
030F:  MOVLW  01
0310:  BCF    03.5
0311:  MOVWF  2C
0312:  CALL   0D0
....................   
....................   
....................   
....................   
....................  i2c_start();//blockdata horni bit 
0313:  BSF    20.4
0314:  MOVF   20,W
0315:  BSF    03.5
0316:  MOVWF  07
0317:  NOP
0318:  BCF    03.5
0319:  BSF    20.3
031A:  MOVF   20,W
031B:  BSF    03.5
031C:  MOVWF  07
031D:  NOP
031E:  BCF    03.5
031F:  BCF    07.4
0320:  BCF    20.4
0321:  MOVF   20,W
0322:  BSF    03.5
0323:  MOVWF  07
0324:  NOP
0325:  BCF    03.5
0326:  BCF    07.3
0327:  BCF    20.3
0328:  MOVF   20,W
0329:  BSF    03.5
032A:  MOVWF  07
....................    I2C_Write(0xAA); 
032B:  MOVLW  AA
032C:  BCF    03.5
032D:  MOVWF  2C
032E:  CALL   086
....................    I2C_write(0x43); 
032F:  MOVLW  43
0330:  MOVWF  2C
0331:  CALL   086
....................    
....................    i2c_start(); 
0332:  BSF    20.4
0333:  MOVF   20,W
0334:  BSF    03.5
0335:  MOVWF  07
0336:  NOP
0337:  BCF    03.5
0338:  BSF    20.3
0339:  MOVF   20,W
033A:  BSF    03.5
033B:  MOVWF  07
033C:  NOP
033D:  BCF    03.5
033E:  BTFSS  07.3
033F:  GOTO   33E
0340:  BCF    07.4
0341:  BCF    20.4
0342:  MOVF   20,W
0343:  BSF    03.5
0344:  MOVWF  07
0345:  NOP
0346:  BCF    03.5
0347:  BCF    07.3
0348:  BCF    20.3
0349:  MOVF   20,W
034A:  BSF    03.5
034B:  MOVWF  07
....................    I2C_Write(0xAB); 
034C:  MOVLW  AB
034D:  BCF    03.5
034E:  MOVWF  2C
034F:  CALL   086
....................    VH=I2C_read(0); 
0350:  CLRF   77
0351:  CALL   0E4
0352:  MOVF   78,W
0353:  MOVWF  2A
....................     
....................    i2c_stop(); 
0354:  BCF    20.4
0355:  MOVF   20,W
0356:  BSF    03.5
0357:  MOVWF  07
0358:  NOP
0359:  BCF    03.5
035A:  BSF    20.3
035B:  MOVF   20,W
035C:  BSF    03.5
035D:  MOVWF  07
035E:  BCF    03.5
035F:  BTFSS  07.3
0360:  GOTO   35F
0361:  NOP
0362:  GOTO   363
0363:  NOP
0364:  BSF    20.4
0365:  MOVF   20,W
0366:  BSF    03.5
0367:  MOVWF  07
0368:  NOP
....................     
....................   i2c_start();//blockdata 
0369:  BCF    03.5
036A:  BSF    20.4
036B:  MOVF   20,W
036C:  BSF    03.5
036D:  MOVWF  07
036E:  NOP
036F:  BCF    03.5
0370:  BSF    20.3
0371:  MOVF   20,W
0372:  BSF    03.5
0373:  MOVWF  07
0374:  NOP
0375:  BCF    03.5
0376:  BCF    07.4
0377:  BCF    20.4
0378:  MOVF   20,W
0379:  BSF    03.5
037A:  MOVWF  07
037B:  NOP
037C:  BCF    03.5
037D:  BCF    07.3
037E:  BCF    20.3
037F:  MOVF   20,W
0380:  BSF    03.5
0381:  MOVWF  07
....................    I2C_Write(0xAA); 
0382:  MOVLW  AA
0383:  BCF    03.5
0384:  MOVWF  2C
0385:  CALL   086
....................    I2C_write(0x44); 
0386:  MOVLW  44
0387:  MOVWF  2C
0388:  CALL   086
....................    
....................    i2c_start(); 
0389:  BSF    20.4
038A:  MOVF   20,W
038B:  BSF    03.5
038C:  MOVWF  07
038D:  NOP
038E:  BCF    03.5
038F:  BSF    20.3
0390:  MOVF   20,W
0391:  BSF    03.5
0392:  MOVWF  07
0393:  NOP
0394:  BCF    03.5
0395:  BTFSS  07.3
0396:  GOTO   395
0397:  BCF    07.4
0398:  BCF    20.4
0399:  MOVF   20,W
039A:  BSF    03.5
039B:  MOVWF  07
039C:  NOP
039D:  BCF    03.5
039E:  BCF    07.3
039F:  BCF    20.3
03A0:  MOVF   20,W
03A1:  BSF    03.5
03A2:  MOVWF  07
....................    I2C_Write(0xAB); 
03A3:  MOVLW  AB
03A4:  BCF    03.5
03A5:  MOVWF  2C
03A6:  CALL   086
....................     
....................    VL=I2C_read(0); 
03A7:  CLRF   77
03A8:  CALL   0E4
03A9:  MOVF   78,W
03AA:  MOVWF  2B
....................    i2c_stop();   
03AB:  BCF    20.4
03AC:  MOVF   20,W
03AD:  BSF    03.5
03AE:  MOVWF  07
03AF:  NOP
03B0:  BCF    03.5
03B1:  BSF    20.3
03B2:  MOVF   20,W
03B3:  BSF    03.5
03B4:  MOVWF  07
03B5:  BCF    03.5
03B6:  BTFSS  07.3
03B7:  GOTO   3B6
03B8:  NOP
03B9:  GOTO   3BA
03BA:  NOP
03BB:  BSF    20.4
03BC:  MOVF   20,W
03BD:  BSF    03.5
03BE:  MOVWF  07
03BF:  NOP
....................        
....................     
.................... delay_ms (1); 
03C0:  MOVLW  01
03C1:  BCF    03.5
03C2:  MOVWF  2C
03C3:  CALL   0D0
....................   
....................   printf("VL %lX \r\n", VL);  
03C4:  MOVLW  56
03C5:  MOVWF  30
03C6:  CALL   01A
03C7:  MOVLW  4C
03C8:  MOVWF  30
03C9:  CALL   01A
03CA:  MOVLW  20
03CB:  MOVWF  30
03CC:  CALL   01A
03CD:  MOVF   2B,W
03CE:  MOVWF  2C
03CF:  MOVLW  37
03D0:  MOVWF  2D
03D1:  CALL   129
03D2:  MOVLW  20
03D3:  MOVWF  30
03D4:  CALL   01A
03D5:  MOVLW  0D
03D6:  MOVWF  30
03D7:  CALL   01A
03D8:  MOVLW  0A
03D9:  MOVWF  30
03DA:  CALL   01A
....................    printf("LH %lX \r\n", VH);  
03DB:  MOVLW  4C
03DC:  MOVWF  30
03DD:  CALL   01A
03DE:  MOVLW  48
03DF:  MOVWF  30
03E0:  CALL   01A
03E1:  MOVLW  20
03E2:  MOVWF  30
03E3:  CALL   01A
03E4:  MOVF   2A,W
03E5:  MOVWF  2C
03E6:  MOVLW  37
03E7:  MOVWF  2D
03E8:  CALL   129
03E9:  MOVLW  20
03EA:  MOVWF  30
03EB:  CALL   01A
03EC:  MOVLW  0D
03ED:  MOVWF  30
03EE:  CALL   01A
03EF:  MOVLW  0A
03F0:  MOVWF  30
03F1:  CALL   01A
....................      
....................    
....................  
....................  
....................    
....................  
.................... if(VH==0x0A) 
03F2:  MOVF   2A,W
03F3:  SUBLW  0A
03F4:  BTFSS  03.2
03F5:  GOTO   412
.................... { 
.................... LSB=LSB-1; 
03F6:  MOVLW  01
03F7:  SUBWF  27,F
.................... printf("Vysledne LSB %lX \r\n", LSB);  
03F8:  MOVLW  10
03F9:  BSF    03.6
03FA:  MOVWF  0D
03FB:  MOVLW  00
03FC:  MOVWF  0F
03FD:  BCF    03.0
03FE:  MOVLW  0D
03FF:  BCF    03.6
0400:  MOVWF  2C
0401:  GOTO   14A
0402:  MOVF   27,W
0403:  MOVWF  2C
0404:  MOVLW  37
0405:  MOVWF  2D
0406:  CALL   129
0407:  MOVLW  20
0408:  MOVWF  30
0409:  CALL   01A
040A:  MOVLW  0D
040B:  MOVWF  30
040C:  CALL   01A
040D:  MOVLW  0A
040E:  MOVWF  30
040F:  CALL   01A
.................... while(TRUE) 
.................... { 
.................... } 
0410:  GOTO   410
.................... } 
....................  
.................... else 
0411:  GOTO   4BE
.................... { 
....................   
....................   
.................... i2c_start();//blockdata 
0412:  BSF    20.4
0413:  MOVF   20,W
0414:  BSF    03.5
0415:  MOVWF  07
0416:  NOP
0417:  BCF    03.5
0418:  BSF    20.3
0419:  MOVF   20,W
041A:  BSF    03.5
041B:  MOVWF  07
041C:  NOP
041D:  BCF    03.5
041E:  BCF    07.4
041F:  BCF    20.4
0420:  MOVF   20,W
0421:  BSF    03.5
0422:  MOVWF  07
0423:  NOP
0424:  BCF    03.5
0425:  BCF    07.3
0426:  BCF    20.3
0427:  MOVF   20,W
0428:  BSF    03.5
0429:  MOVWF  07
....................    I2C_Write(0xAA); 
042A:  MOVLW  AA
042B:  BCF    03.5
042C:  MOVWF  2C
042D:  CALL   086
....................    I2C_write(0x43); 
042E:  MOVLW  43
042F:  MOVWF  2C
0430:  CALL   086
....................    
....................    i2c_start(); 
0431:  BSF    20.4
0432:  MOVF   20,W
0433:  BSF    03.5
0434:  MOVWF  07
0435:  NOP
0436:  BCF    03.5
0437:  BSF    20.3
0438:  MOVF   20,W
0439:  BSF    03.5
043A:  MOVWF  07
043B:  NOP
043C:  BCF    03.5
043D:  BTFSS  07.3
043E:  GOTO   43D
043F:  BCF    07.4
0440:  BCF    20.4
0441:  MOVF   20,W
0442:  BSF    03.5
0443:  MOVWF  07
0444:  NOP
0445:  BCF    03.5
0446:  BCF    07.3
0447:  BCF    20.3
0448:  MOVF   20,W
0449:  BSF    03.5
044A:  MOVWF  07
....................    I2C_Write(0xAA); 
044B:  MOVLW  AA
044C:  BCF    03.5
044D:  MOVWF  2C
044E:  CALL   086
....................    I2C_write(0x0A); 
044F:  MOVLW  0A
0450:  MOVWF  2C
0451:  CALL   086
....................    i2c_stop();  
0452:  BCF    20.4
0453:  MOVF   20,W
0454:  BSF    03.5
0455:  MOVWF  07
0456:  NOP
0457:  BCF    03.5
0458:  BSF    20.3
0459:  MOVF   20,W
045A:  BSF    03.5
045B:  MOVWF  07
045C:  BCF    03.5
045D:  BTFSS  07.3
045E:  GOTO   45D
045F:  NOP
0460:  GOTO   461
0461:  NOP
0462:  BSF    20.4
0463:  MOVF   20,W
0464:  BSF    03.5
0465:  MOVWF  07
0466:  NOP
....................  
.................... i2c_start();//blockdata 
0467:  BCF    03.5
0468:  BSF    20.4
0469:  MOVF   20,W
046A:  BSF    03.5
046B:  MOVWF  07
046C:  NOP
046D:  BCF    03.5
046E:  BSF    20.3
046F:  MOVF   20,W
0470:  BSF    03.5
0471:  MOVWF  07
0472:  NOP
0473:  BCF    03.5
0474:  BCF    07.4
0475:  BCF    20.4
0476:  MOVF   20,W
0477:  BSF    03.5
0478:  MOVWF  07
0479:  NOP
047A:  BCF    03.5
047B:  BCF    07.3
047C:  BCF    20.3
047D:  MOVF   20,W
047E:  BSF    03.5
047F:  MOVWF  07
....................    I2C_Write(0xAA); 
0480:  MOVLW  AA
0481:  BCF    03.5
0482:  MOVWF  2C
0483:  CALL   086
....................    I2C_write(0x44); 
0484:  MOVLW  44
0485:  MOVWF  2C
0486:  CALL   086
....................    
....................    i2c_start(); 
0487:  BSF    20.4
0488:  MOVF   20,W
0489:  BSF    03.5
048A:  MOVWF  07
048B:  NOP
048C:  BCF    03.5
048D:  BSF    20.3
048E:  MOVF   20,W
048F:  BSF    03.5
0490:  MOVWF  07
0491:  NOP
0492:  BCF    03.5
0493:  BTFSS  07.3
0494:  GOTO   493
0495:  BCF    07.4
0496:  BCF    20.4
0497:  MOVF   20,W
0498:  BSF    03.5
0499:  MOVWF  07
049A:  NOP
049B:  BCF    03.5
049C:  BCF    07.3
049D:  BCF    20.3
049E:  MOVF   20,W
049F:  BSF    03.5
04A0:  MOVWF  07
....................    I2C_Write(0xAA); 
04A1:  MOVLW  AA
04A2:  BCF    03.5
04A3:  MOVWF  2C
04A4:  CALL   086
....................    I2C_write(0x5A); 
04A5:  MOVLW  5A
04A6:  MOVWF  2C
04A7:  CALL   086
....................    i2c_stop();  
04A8:  BCF    20.4
04A9:  MOVF   20,W
04AA:  BSF    03.5
04AB:  MOVWF  07
04AC:  NOP
04AD:  BCF    03.5
04AE:  BSF    20.3
04AF:  MOVF   20,W
04B0:  BSF    03.5
04B1:  MOVWF  07
04B2:  BCF    03.5
04B3:  BTFSS  07.3
04B4:  GOTO   4B3
04B5:  NOP
04B6:  GOTO   4B7
04B7:  NOP
04B8:  BSF    20.4
04B9:  MOVF   20,W
04BA:  BSF    03.5
04BB:  MOVWF  07
04BC:  NOP
04BD:  BCF    03.5
....................  
....................  
....................     
....................     
.................... }  
....................  
.................... i2c_start();//blockdata 
04BE:  BSF    20.4
04BF:  MOVF   20,W
04C0:  BSF    03.5
04C1:  MOVWF  07
04C2:  NOP
04C3:  BCF    03.5
04C4:  BSF    20.3
04C5:  MOVF   20,W
04C6:  BSF    03.5
04C7:  MOVWF  07
04C8:  NOP
04C9:  BCF    03.5
04CA:  BCF    07.4
04CB:  BCF    20.4
04CC:  MOVF   20,W
04CD:  BSF    03.5
04CE:  MOVWF  07
04CF:  NOP
04D0:  BCF    03.5
04D1:  BCF    07.3
04D2:  BCF    20.3
04D3:  MOVF   20,W
04D4:  BSF    03.5
04D5:  MOVWF  07
....................    I2C_Write(0xAA); 
04D6:  MOVLW  AA
04D7:  BCF    03.5
04D8:  MOVWF  2C
04D9:  CALL   086
....................    I2C_write(0x60); 
04DA:  MOVLW  60
04DB:  MOVWF  2C
04DC:  CALL   086
....................    
....................    i2c_start(); 
04DD:  BSF    20.4
04DE:  MOVF   20,W
04DF:  BSF    03.5
04E0:  MOVWF  07
04E1:  NOP
04E2:  BCF    03.5
04E3:  BSF    20.3
04E4:  MOVF   20,W
04E5:  BSF    03.5
04E6:  MOVWF  07
04E7:  NOP
04E8:  BCF    03.5
04E9:  BTFSS  07.3
04EA:  GOTO   4E9
04EB:  BCF    07.4
04EC:  BCF    20.4
04ED:  MOVF   20,W
04EE:  BSF    03.5
04EF:  MOVWF  07
04F0:  NOP
04F1:  BCF    03.5
04F2:  BCF    07.3
04F3:  BCF    20.3
04F4:  MOVF   20,W
04F5:  BSF    03.5
04F6:  MOVWF  07
....................    I2C_Write(0xAA); 
04F7:  MOVLW  AA
04F8:  BCF    03.5
04F9:  MOVWF  2C
04FA:  CALL   086
....................    I2C_write(LSB); 
04FB:  MOVF   27,W
04FC:  MOVWF  2C
04FD:  CALL   086
....................    i2c_stop(); 
04FE:  BCF    20.4
04FF:  MOVF   20,W
0500:  BSF    03.5
0501:  MOVWF  07
0502:  NOP
0503:  BCF    03.5
0504:  BSF    20.3
0505:  MOVF   20,W
0506:  BSF    03.5
0507:  MOVWF  07
0508:  BCF    03.5
0509:  BTFSS  07.3
050A:  GOTO   509
050B:  NOP
050C:  GOTO   50D
050D:  NOP
050E:  BSF    20.4
050F:  MOVF   20,W
0510:  BSF    03.5
0511:  MOVWF  07
0512:  NOP
....................  
.................... LSB=LSB+1; 
0513:  MOVLW  01
0514:  BCF    03.5
0515:  ADDWF  27,F
....................  
.................... delay_ms (100); 
0516:  MOVLW  64
0517:  MOVWF  2C
0518:  CALL   0D0
....................  
.................... } 
0519:  GOTO   209
....................  
....................  }  
....................   
051A:  SLEEP

Configuration Fuses:
   Word  1: 2CF5   INTRC NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
