# Name: Makefile
# Project: USB I2C
# Author: Christian Starkjohann, modified for I2C USB by Till Harbaum
# Creation Date: 2005-03-20
# Tabsize: 4
# Copyright: (c) 2005 by OBJECTIVE DEVELOPMENT Software GmbH
# License: Proprietary, free under certain conditions. See Documentation.
# This Revision: $Id: Makefile-avrusb.mega8,v 1.1 2006/12/03 21:28:59 harbaum Exp $

SERIAL = `echo /dev/tty.[Uu][Ss]*`
UISP = uisp -dprog=stk200
# UISP = uisp -dprog=avr910 -dserial=$(SERIAL) -dpart=auto
# The two lines above are for "uisp" and the AVR910 serial programmer connected
# to a Keyspan USB to serial converter to a Mac running Mac OS X.
# Choose your favorite programmer and interface.

DEFINES += -DDEBUG
DEFINES += -DDEBUG_LEVEL=1
COMPILE = avr-gcc -Wall -O2 -Iusbdrv -I. -mmcu=atmega88 $(DEFINES)

OBJECTS = usbdrv/usbdrv.o usbdrv/usbdrvasm.o usbdrv/oddebug.o main.o


# symbolic targets:
all:	firmware.hex

.c.o:
	$(COMPILE) -c $< -o $@

.S.o:
	$(COMPILE) -x assembler-with-cpp -c $< -o $@
# "-x assembler-with-cpp" should not be necessary since this is the default
# file type for the .S (with capital S) extension. However, upper case
# characters are not always preserved on Windows. To ensure WinAVR
# compatibility define the file type manually.

.c.s:
	$(COMPILE) -S $< -o $@

# Fuse extended byte:
# 0xF9 = 1 1 1 1   1 0 0 1 <<<----Default Value (default value is used)
# 0xF9 = 1 1 1 1   1 0 0 1 <-- BOOTRST (select vetor)
#                      \+/
#                       +----- BOOTSZ1..0 (Select Boot Size)
# Fuse high byte:
# 0xDF   1 1 0 1   1 1 1 1 <<<----Default Value (default value may be used)
# 0xDE = 1 1 0 1   1 1 1 0
#        ^ ^ ^ ^   ^ \-+-/
#        | | | |   |   +------ BODLEVEL (1.7-2.0V)
#        | | | |   +---------- EESAVE (don't preserve EEPROM over chip erase)
#        | | | +-------------- WDTON (WDT not always on)
#        | | +---------------- SPIEN (allow serial programming)!!!
#        | +------------------ DWEN (debug wire not enabled)
#        +-------------------- RSTDISBL (reset pin is not disabled)
# Fuse low byte:
# 0x62   0 1 1 0   0 0 1 0 <<<----Default Value (must be programmed to use xosc)
# 0xD7 = 1 1 0 1   0 1 1 1
#        ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 (full swing xosc, BOD enabled)
#        | |  +--------------- SUT 1..0 (startup timer - see CKSEL)
#        | +------------------ CKOUT (clock output is not enabled)
#        +-------------------- CLKDIV8 (clock divider is not enabled)
fuse:
	$(UISP) --wr_fuse_h=0xDE --wr_fuse_l=0xD7


clean:
	rm -f firmware.hex firmware.lst firmware.obj firmware.cof firmware.list firmware.map firmware.eep.hex firmware.bin *.o usbdrv/*.o firmware.s usbdrv/oddebug.s usbdrv/usbdrv.s

# file targets:
firmware.bin:	$(OBJECTS)
	$(COMPILE) -o firmware.bin $(OBJECTS)

firmware.hex:	firmware.bin
	rm -f firmware.hex firmware.eep.hex
	avr-objcopy -j .text -j .data -O ihex firmware.bin firmware.hex
	./checksize firmware.bin 8192 960
# do the checksize script as our last action to allow successful compilation
# on Windows with WinAVR where the Unix commands will fail.

program: firmware.hex
	avrdude -c usbasp -p atmega88 -U lfuse:w:0xD7:m -U hfuse:w:0xDE:m -U flash:w:firmware.hex

program-nodep:
	avrdude -c usbasp -p atmega88 -U lfuse:w:0xD7:m -U hfuse:w:0xDE:m -U flash:w:firmware.hex

disasm:	firmware.bin
	avr-objdump -d firmware.bin

cpp:
	$(COMPILE) -E main.c
