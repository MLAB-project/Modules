CCS PCM C Compiler, Version 4.106, 47914               22-4-13 21:36

               Filename: C:\Users\Honza\Documents\pic\I2C_bat_pam\LED_BAT7\main.lst

               ROM used: 1123 words (14%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         21 (6%) worst case
               Stack:    2 locations

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   1A1
0003:  NOP
....................  
.................... #include "main.h" 
.................... #include <16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES INTRC                 	//Internal RC Osc 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES BORV40                	//Brownout reset at 4.0V 
....................  
.................... #use delay(clock=8000000) 
*
00D6:  MOVLW  2B
00D7:  MOVWF  04
00D8:  BCF    03.7
00D9:  MOVF   00,W
00DA:  BTFSC  03.2
00DB:  GOTO   0E9
00DC:  MOVLW  02
00DD:  MOVWF  78
00DE:  CLRF   77
00DF:  DECFSZ 77,F
00E0:  GOTO   0DF
00E1:  DECFSZ 78,F
00E2:  GOTO   0DE
00E3:  MOVLW  97
00E4:  MOVWF  77
00E5:  DECFSZ 77,F
00E6:  GOTO   0E5
00E7:  DECFSZ 00,F
00E8:  GOTO   0DC
00E9:  RETURN
....................  
....................  
.................... #define EEPROM_SDA  PIN_C4 
.................... #define EEPROM_SCL  PIN_C3 
.................... #use i2c(master, sda=EEPROM_SDA, scl=EEPROM_SCL) 
*
008C:  MOVLW  08
008D:  MOVWF  78
008E:  NOP
008F:  BCF    07.3
0090:  BCF    20.3
0091:  MOVF   20,W
0092:  BSF    03.5
0093:  MOVWF  07
0094:  NOP
0095:  BCF    03.5
0096:  RLF    2B,F
0097:  BCF    07.4
0098:  BTFSS  03.0
0099:  GOTO   0A0
009A:  BSF    20.4
009B:  MOVF   20,W
009C:  BSF    03.5
009D:  MOVWF  07
009E:  GOTO   0A4
009F:  BCF    03.5
00A0:  BCF    20.4
00A1:  MOVF   20,W
00A2:  BSF    03.5
00A3:  MOVWF  07
00A4:  NOP
00A5:  BCF    03.5
00A6:  BSF    20.3
00A7:  MOVF   20,W
00A8:  BSF    03.5
00A9:  MOVWF  07
00AA:  BCF    03.5
00AB:  BTFSS  07.3
00AC:  GOTO   0AB
00AD:  DECFSZ 78,F
00AE:  GOTO   08E
00AF:  NOP
00B0:  BCF    07.3
00B1:  BCF    20.3
00B2:  MOVF   20,W
00B3:  BSF    03.5
00B4:  MOVWF  07
00B5:  NOP
00B6:  BCF    03.5
00B7:  BSF    20.4
00B8:  MOVF   20,W
00B9:  BSF    03.5
00BA:  MOVWF  07
00BB:  NOP
00BC:  NOP
00BD:  BCF    03.5
00BE:  BSF    20.3
00BF:  MOVF   20,W
00C0:  BSF    03.5
00C1:  MOVWF  07
00C2:  BCF    03.5
00C3:  BTFSS  07.3
00C4:  GOTO   0C3
00C5:  CLRF   78
00C6:  NOP
00C7:  BTFSC  07.4
00C8:  BSF    78.0
00C9:  BCF    07.3
00CA:  BCF    20.3
00CB:  MOVF   20,W
00CC:  BSF    03.5
00CD:  MOVWF  07
00CE:  BCF    03.5
00CF:  BCF    07.4
00D0:  BCF    20.4
00D1:  MOVF   20,W
00D2:  BSF    03.5
00D3:  MOVWF  07
00D4:  BCF    03.5
00D5:  RETURN
*
00EA:  MOVLW  08
00EB:  MOVWF  2C
00EC:  MOVF   77,W
00ED:  MOVWF  2D
00EE:  BSF    20.4
00EF:  MOVF   20,W
00F0:  BSF    03.5
00F1:  MOVWF  07
00F2:  NOP
00F3:  BCF    03.5
00F4:  BSF    20.3
00F5:  MOVF   20,W
00F6:  BSF    03.5
00F7:  MOVWF  07
00F8:  BCF    03.5
00F9:  BTFSS  07.3
00FA:  GOTO   0F9
00FB:  BTFSC  07.4
00FC:  BSF    03.0
00FD:  BTFSS  07.4
00FE:  BCF    03.0
00FF:  RLF    78,F
0100:  NOP
0101:  BCF    20.3
0102:  MOVF   20,W
0103:  BSF    03.5
0104:  MOVWF  07
0105:  BCF    03.5
0106:  BCF    07.3
0107:  DECFSZ 2C,F
0108:  GOTO   0EE
0109:  BSF    20.4
010A:  MOVF   20,W
010B:  BSF    03.5
010C:  MOVWF  07
010D:  NOP
010E:  BCF    03.5
010F:  BCF    07.4
0110:  MOVF   2D,W
0111:  BTFSC  03.2
0112:  GOTO   118
0113:  BCF    20.4
0114:  MOVF   20,W
0115:  BSF    03.5
0116:  MOVWF  07
0117:  BCF    03.5
0118:  NOP
0119:  BSF    20.3
011A:  MOVF   20,W
011B:  BSF    03.5
011C:  MOVWF  07
011D:  BCF    03.5
011E:  BTFSS  07.3
011F:  GOTO   11E
0120:  NOP
0121:  BCF    07.3
0122:  BCF    20.3
0123:  MOVF   20,W
0124:  BSF    03.5
0125:  MOVWF  07
0126:  NOP
0127:  BCF    03.5
0128:  BCF    07.4
0129:  BCF    20.4
012A:  MOVF   20,W
012B:  BSF    03.5
012C:  MOVWF  07
012D:  BCF    03.5
012E:  BCF    0A.3
012F:  BCF    0A.4
0130:  GOTO   357 (RETURN)
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C7,rcv=PIN_C6,bits=8) //rcv TXD xmit RXD 
*
0020:  BCF    20.7
0021:  MOVF   20,W
0022:  BSF    03.5
0023:  MOVWF  07
0024:  BCF    03.5
0025:  BCF    07.7
0026:  MOVLW  08
0027:  MOVWF  78
0028:  GOTO   029
0029:  NOP
002A:  BSF    78.7
002B:  GOTO   03A
002C:  BCF    78.7
002D:  RRF    2F,F
002E:  BTFSC  03.0
002F:  BSF    07.7
0030:  BTFSS  03.0
0031:  BCF    07.7
0032:  BSF    78.6
0033:  GOTO   03A
0034:  BCF    78.6
0035:  DECFSZ 78,F
0036:  GOTO   02D
0037:  GOTO   038
0038:  NOP
0039:  BSF    07.7
003A:  MOVLW  3F
003B:  MOVWF  04
003C:  DECFSZ 04,F
003D:  GOTO   03C
003E:  NOP
003F:  BTFSC  78.7
0040:  GOTO   02C
0041:  BTFSC  78.6
0042:  GOTO   034
0043:  RETURN
....................  
....................  
.................... void main() 
.................... { 
*
01A1:  CLRF   04
01A2:  BCF    03.7
01A3:  MOVLW  1F
01A4:  ANDWF  03,F
01A5:  MOVLW  71
01A6:  BSF    03.5
01A7:  MOVWF  0F
01A8:  MOVF   0F,W
01A9:  BCF    03.5
01AA:  BCF    20.7
01AB:  MOVF   20,W
01AC:  BSF    03.5
01AD:  MOVWF  07
01AE:  BCF    03.5
01AF:  BSF    07.7
01B0:  BSF    03.5
01B1:  BSF    03.6
01B2:  MOVF   09,W
01B3:  ANDLW  C0
01B4:  MOVWF  09
01B5:  BCF    03.6
01B6:  BCF    1F.4
01B7:  BCF    1F.5
01B8:  MOVLW  00
01B9:  BSF    03.6
01BA:  MOVWF  08
01BB:  BCF    03.5
01BC:  CLRF   07
01BD:  CLRF   08
01BE:  CLRF   09
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
*
01C2:  BSF    03.5
01C3:  BSF    03.6
01C4:  MOVF   09,W
01C5:  ANDLW  C0
01C6:  MOVWF  09
01C7:  BCF    03.6
01C8:  BCF    1F.4
01C9:  BCF    1F.5
01CA:  MOVLW  00
01CB:  BSF    03.6
01CC:  MOVWF  08
....................    setup_adc(ADC_CLOCK_DIV_2); 
01CD:  BCF    03.5
01CE:  BCF    03.6
01CF:  BCF    1F.6
01D0:  BCF    1F.7
01D1:  BSF    03.5
01D2:  BCF    1F.7
01D3:  BCF    03.5
01D4:  BSF    1F.0
....................    setup_spi(SPI_SS_DISABLED); 
01D5:  BCF    14.5
01D6:  BCF    20.5
01D7:  MOVF   20,W
01D8:  BSF    03.5
01D9:  MOVWF  07
01DA:  BCF    03.5
01DB:  BSF    20.4
01DC:  MOVF   20,W
01DD:  BSF    03.5
01DE:  MOVWF  07
01DF:  BCF    03.5
01E0:  BCF    20.3
01E1:  MOVF   20,W
01E2:  BSF    03.5
01E3:  MOVWF  07
01E4:  MOVLW  01
01E5:  BCF    03.5
01E6:  MOVWF  14
01E7:  MOVLW  00
01E8:  BSF    03.5
01E9:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
01EA:  MOVF   01,W
01EB:  ANDLW  C7
01EC:  IORLW  08
01ED:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
01EE:  BCF    03.5
01EF:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
01F0:  MOVLW  00
01F1:  MOVWF  78
01F2:  MOVWF  12
01F3:  MOVLW  00
01F4:  BSF    03.5
01F5:  MOVWF  12
....................    setup_ccp1(CCP_OFF); 
01F6:  BCF    03.5
01F7:  BSF    20.2
01F8:  MOVF   20,W
01F9:  BSF    03.5
01FA:  MOVWF  07
01FB:  BCF    03.5
01FC:  CLRF   17
01FD:  BSF    03.5
01FE:  CLRF   1B
01FF:  CLRF   1C
0200:  MOVLW  01
0201:  MOVWF  1D
....................    setup_comparator(NC_NC_NC_NC);// This device COMP currently not supported by the PICWizard 
0202:  BCF    03.5
0203:  BSF    03.6
0204:  CLRF   07
0205:  CLRF   08
0206:  CLRF   09
....................  
.................... printf("Simple Thermomether  \r\n",); 
0207:  MOVLW  04
0208:  MOVWF  0D
0209:  MOVLW  00
020A:  MOVWF  0F
020B:  BCF    03.6
020C:  GOTO   044
.................... unsigned int8 STAV1,STAV2; 
....................  
.................... unsigned int16 SOUCET, SOUCET1; 
.................... unsigned int8 LSB=0,ZK,k=0; 
020D:  CLRF   27
020E:  CLRF   29
.................... //unsigned int8   
....................    
....................  while(TRUE) 
....................  {  
....................     
....................     
....................  
....................  
....................    i2c_start(); //blockdatacontrol 
020F:  BSF    20.4
0210:  MOVF   20,W
0211:  BSF    03.5
0212:  MOVWF  07
0213:  NOP
0214:  BCF    03.5
0215:  BSF    20.3
0216:  MOVF   20,W
0217:  BSF    03.5
0218:  MOVWF  07
0219:  NOP
021A:  BCF    03.5
021B:  BCF    07.4
021C:  BCF    20.4
021D:  MOVF   20,W
021E:  BSF    03.5
021F:  MOVWF  07
0220:  NOP
0221:  BCF    03.5
0222:  BCF    07.3
0223:  BCF    20.3
0224:  MOVF   20,W
0225:  BSF    03.5
0226:  MOVWF  07
....................    I2C_Write(0xAA); 
0227:  MOVLW  AA
0228:  BCF    03.5
0229:  MOVWF  2B
022A:  CALL   08C
....................    I2C_write(0x61); 
022B:  MOVLW  61
022C:  MOVWF  2B
022D:  CALL   08C
....................    i2c_start(); 
022E:  BSF    20.4
022F:  MOVF   20,W
0230:  BSF    03.5
0231:  MOVWF  07
0232:  NOP
0233:  BCF    03.5
0234:  BSF    20.3
0235:  MOVF   20,W
0236:  BSF    03.5
0237:  MOVWF  07
0238:  NOP
0239:  BCF    03.5
023A:  BTFSS  07.3
023B:  GOTO   23A
023C:  BCF    07.4
023D:  BCF    20.4
023E:  MOVF   20,W
023F:  BSF    03.5
0240:  MOVWF  07
0241:  NOP
0242:  BCF    03.5
0243:  BCF    07.3
0244:  BCF    20.3
0245:  MOVF   20,W
0246:  BSF    03.5
0247:  MOVWF  07
....................    I2C_Write(0xAA); 
0248:  MOVLW  AA
0249:  BCF    03.5
024A:  MOVWF  2B
024B:  CALL   08C
....................    i2c_write(0x00); 
024C:  CLRF   2B
024D:  CALL   08C
....................    i2c_stop();  
024E:  BCF    20.4
024F:  MOVF   20,W
0250:  BSF    03.5
0251:  MOVWF  07
0252:  NOP
0253:  BCF    03.5
0254:  BSF    20.3
0255:  MOVF   20,W
0256:  BSF    03.5
0257:  MOVWF  07
0258:  BCF    03.5
0259:  BTFSS  07.3
025A:  GOTO   259
025B:  NOP
025C:  GOTO   25D
025D:  NOP
025E:  BSF    20.4
025F:  MOVF   20,W
0260:  BSF    03.5
0261:  MOVWF  07
0262:  NOP
....................    delay_ms (1); 
0263:  MOVLW  01
0264:  BCF    03.5
0265:  MOVWF  2B
0266:  CALL   0D6
....................  
....................  
....................    i2c_start();//dataflashclass  
0267:  BSF    20.4
0268:  MOVF   20,W
0269:  BSF    03.5
026A:  MOVWF  07
026B:  NOP
026C:  BCF    03.5
026D:  BSF    20.3
026E:  MOVF   20,W
026F:  BSF    03.5
0270:  MOVWF  07
0271:  NOP
0272:  BCF    03.5
0273:  BCF    07.4
0274:  BCF    20.4
0275:  MOVF   20,W
0276:  BSF    03.5
0277:  MOVWF  07
0278:  NOP
0279:  BCF    03.5
027A:  BCF    07.3
027B:  BCF    20.3
027C:  MOVF   20,W
027D:  BSF    03.5
027E:  MOVWF  07
....................    I2C_Write(0xAA); 
027F:  MOVLW  AA
0280:  BCF    03.5
0281:  MOVWF  2B
0282:  CALL   08C
....................    I2C_write(0x3e); 
0283:  MOVLW  3E
0284:  MOVWF  2B
0285:  CALL   08C
....................     
....................    i2c_start(); 
0286:  BSF    20.4
0287:  MOVF   20,W
0288:  BSF    03.5
0289:  MOVWF  07
028A:  NOP
028B:  BCF    03.5
028C:  BSF    20.3
028D:  MOVF   20,W
028E:  BSF    03.5
028F:  MOVWF  07
0290:  NOP
0291:  BCF    03.5
0292:  BTFSS  07.3
0293:  GOTO   292
0294:  BCF    07.4
0295:  BCF    20.4
0296:  MOVF   20,W
0297:  BSF    03.5
0298:  MOVWF  07
0299:  NOP
029A:  BCF    03.5
029B:  BCF    07.3
029C:  BCF    20.3
029D:  MOVF   20,W
029E:  BSF    03.5
029F:  MOVWF  07
....................    I2C_Write(0xAA); 
02A0:  MOVLW  AA
02A1:  BCF    03.5
02A2:  MOVWF  2B
02A3:  CALL   08C
....................    i2c_write(0x40); 
02A4:  MOVLW  40
02A5:  MOVWF  2B
02A6:  CALL   08C
....................    i2c_stop();  
02A7:  BCF    20.4
02A8:  MOVF   20,W
02A9:  BSF    03.5
02AA:  MOVWF  07
02AB:  NOP
02AC:  BCF    03.5
02AD:  BSF    20.3
02AE:  MOVF   20,W
02AF:  BSF    03.5
02B0:  MOVWF  07
02B1:  BCF    03.5
02B2:  BTFSS  07.3
02B3:  GOTO   2B2
02B4:  NOP
02B5:  GOTO   2B6
02B6:  NOP
02B7:  BSF    20.4
02B8:  MOVF   20,W
02B9:  BSF    03.5
02BA:  MOVWF  07
02BB:  NOP
....................    delay_ms (1); 
02BC:  MOVLW  01
02BD:  BCF    03.5
02BE:  MOVWF  2B
02BF:  CALL   0D6
....................   
....................   
....................   i2c_start();//dataflashblock 
02C0:  BSF    20.4
02C1:  MOVF   20,W
02C2:  BSF    03.5
02C3:  MOVWF  07
02C4:  NOP
02C5:  BCF    03.5
02C6:  BSF    20.3
02C7:  MOVF   20,W
02C8:  BSF    03.5
02C9:  MOVWF  07
02CA:  NOP
02CB:  BCF    03.5
02CC:  BCF    07.4
02CD:  BCF    20.4
02CE:  MOVF   20,W
02CF:  BSF    03.5
02D0:  MOVWF  07
02D1:  NOP
02D2:  BCF    03.5
02D3:  BCF    07.3
02D4:  BCF    20.3
02D5:  MOVF   20,W
02D6:  BSF    03.5
02D7:  MOVWF  07
....................    I2C_Write(0xAA); 
02D8:  MOVLW  AA
02D9:  BCF    03.5
02DA:  MOVWF  2B
02DB:  CALL   08C
....................    I2C_write(0x3f); 
02DC:  MOVLW  3F
02DD:  MOVWF  2B
02DE:  CALL   08C
....................     
....................    i2c_start(); 
02DF:  BSF    20.4
02E0:  MOVF   20,W
02E1:  BSF    03.5
02E2:  MOVWF  07
02E3:  NOP
02E4:  BCF    03.5
02E5:  BSF    20.3
02E6:  MOVF   20,W
02E7:  BSF    03.5
02E8:  MOVWF  07
02E9:  NOP
02EA:  BCF    03.5
02EB:  BTFSS  07.3
02EC:  GOTO   2EB
02ED:  BCF    07.4
02EE:  BCF    20.4
02EF:  MOVF   20,W
02F0:  BSF    03.5
02F1:  MOVWF  07
02F2:  NOP
02F3:  BCF    03.5
02F4:  BCF    07.3
02F5:  BCF    20.3
02F6:  MOVF   20,W
02F7:  BSF    03.5
02F8:  MOVWF  07
....................    I2C_Write(0xAA); 
02F9:  MOVLW  AA
02FA:  BCF    03.5
02FB:  MOVWF  2B
02FC:  CALL   08C
....................    I2C_write(0x00); 
02FD:  CLRF   2B
02FE:  CALL   08C
....................    i2c_stop();  
02FF:  BCF    20.4
0300:  MOVF   20,W
0301:  BSF    03.5
0302:  MOVWF  07
0303:  NOP
0304:  BCF    03.5
0305:  BSF    20.3
0306:  MOVF   20,W
0307:  BSF    03.5
0308:  MOVWF  07
0309:  BCF    03.5
030A:  BTFSS  07.3
030B:  GOTO   30A
030C:  NOP
030D:  GOTO   30E
030E:  NOP
030F:  BSF    20.4
0310:  MOVF   20,W
0311:  BSF    03.5
0312:  MOVWF  07
0313:  NOP
....................   
....................  delay_ms (1); 
0314:  MOVLW  01
0315:  BCF    03.5
0316:  MOVWF  2B
0317:  CALL   0D6
....................   
....................  i2c_start();//blockdata 
0318:  BSF    20.4
0319:  MOVF   20,W
031A:  BSF    03.5
031B:  MOVWF  07
031C:  NOP
031D:  BCF    03.5
031E:  BSF    20.3
031F:  MOVF   20,W
0320:  BSF    03.5
0321:  MOVWF  07
0322:  NOP
0323:  BCF    03.5
0324:  BCF    07.4
0325:  BCF    20.4
0326:  MOVF   20,W
0327:  BSF    03.5
0328:  MOVWF  07
0329:  NOP
032A:  BCF    03.5
032B:  BCF    07.3
032C:  BCF    20.3
032D:  MOVF   20,W
032E:  BSF    03.5
032F:  MOVWF  07
....................    I2C_Write(0xAA); 
0330:  MOVLW  AA
0331:  BCF    03.5
0332:  MOVWF  2B
0333:  CALL   08C
....................    I2C_write(0x44); 
0334:  MOVLW  44
0335:  MOVWF  2B
0336:  CALL   08C
....................    
....................    i2c_start(); 
0337:  BSF    20.4
0338:  MOVF   20,W
0339:  BSF    03.5
033A:  MOVWF  07
033B:  NOP
033C:  BCF    03.5
033D:  BSF    20.3
033E:  MOVF   20,W
033F:  BSF    03.5
0340:  MOVWF  07
0341:  NOP
0342:  BCF    03.5
0343:  BTFSS  07.3
0344:  GOTO   343
0345:  BCF    07.4
0346:  BCF    20.4
0347:  MOVF   20,W
0348:  BSF    03.5
0349:  MOVWF  07
034A:  NOP
034B:  BCF    03.5
034C:  BCF    07.3
034D:  BCF    20.3
034E:  MOVF   20,W
034F:  BSF    03.5
0350:  MOVWF  07
....................    I2C_Write(0xAB); 
0351:  MOVLW  AB
0352:  BCF    03.5
0353:  MOVWF  2B
0354:  CALL   08C
....................    ZK=I2C_read(0); 
0355:  CLRF   77
0356:  GOTO   0EA
0357:  MOVF   78,W
0358:  MOVWF  28
....................    i2c_stop(); 
0359:  BCF    20.4
035A:  MOVF   20,W
035B:  BSF    03.5
035C:  MOVWF  07
035D:  NOP
035E:  BCF    03.5
035F:  BSF    20.3
0360:  MOVF   20,W
0361:  BSF    03.5
0362:  MOVWF  07
0363:  BCF    03.5
0364:  BTFSS  07.3
0365:  GOTO   364
0366:  NOP
0367:  GOTO   368
0368:  NOP
0369:  BSF    20.4
036A:  MOVF   20,W
036B:  BSF    03.5
036C:  MOVWF  07
036D:  NOP
....................     
.................... delay_ms (1); 
036E:  MOVLW  01
036F:  BCF    03.5
0370:  MOVWF  2B
0371:  CALL   0D6
....................   
....................   printf("LED %lX \r\n", ZK);  
0372:  MOVLW  10
0373:  BSF    03.6
0374:  MOVWF  0D
0375:  MOVLW  00
0376:  MOVWF  0F
0377:  BCF    03.0
0378:  MOVLW  04
0379:  BCF    03.6
037A:  MOVWF  2B
037B:  CALL   131
037C:  MOVF   28,W
037D:  MOVWF  2B
037E:  MOVLW  37
037F:  MOVWF  2C
0380:  CALL   180
0381:  MOVLW  20
0382:  MOVWF  2F
0383:  CALL   020
0384:  MOVLW  0D
0385:  MOVWF  2F
0386:  CALL   020
0387:  MOVLW  0A
0388:  MOVWF  2F
0389:  CALL   020
....................  
.................... if(ZK==0x73) 
038A:  MOVF   28,W
038B:  SUBLW  73
038C:  BTFSS  03.2
038D:  GOTO   3AA
.................... { 
.................... LSB=LSB-1; 
038E:  MOVLW  01
038F:  SUBWF  27,F
.................... printf("Vysledne LSB %lX \r\n", LSB);  
0390:  MOVLW  16
0391:  BSF    03.6
0392:  MOVWF  0D
0393:  MOVLW  00
0394:  MOVWF  0F
0395:  BCF    03.0
0396:  MOVLW  0D
0397:  BCF    03.6
0398:  MOVWF  2B
0399:  CALL   131
039A:  MOVF   27,W
039B:  MOVWF  2B
039C:  MOVLW  37
039D:  MOVWF  2C
039E:  CALL   180
039F:  MOVLW  20
03A0:  MOVWF  2F
03A1:  CALL   020
03A2:  MOVLW  0D
03A3:  MOVWF  2F
03A4:  CALL   020
03A5:  MOVLW  0A
03A6:  MOVWF  2F
03A7:  CALL   020
.................... while(TRUE) 
.................... { 
.................... } 
03A8:  GOTO   3A8
.................... } 
....................  
.................... else 
03A9:  GOTO   45C
.................... { 
....................  i2c_start();//blockdata 
03AA:  BSF    20.4
03AB:  MOVF   20,W
03AC:  BSF    03.5
03AD:  MOVWF  07
03AE:  NOP
03AF:  BCF    03.5
03B0:  BSF    20.3
03B1:  MOVF   20,W
03B2:  BSF    03.5
03B3:  MOVWF  07
03B4:  NOP
03B5:  BCF    03.5
03B6:  BCF    07.4
03B7:  BCF    20.4
03B8:  MOVF   20,W
03B9:  BSF    03.5
03BA:  MOVWF  07
03BB:  NOP
03BC:  BCF    03.5
03BD:  BCF    07.3
03BE:  BCF    20.3
03BF:  MOVF   20,W
03C0:  BSF    03.5
03C1:  MOVWF  07
....................    I2C_Write(0xAA); 
03C2:  MOVLW  AA
03C3:  BCF    03.5
03C4:  MOVWF  2B
03C5:  CALL   08C
....................    I2C_write(0x44); 
03C6:  MOVLW  44
03C7:  MOVWF  2B
03C8:  CALL   08C
....................    
....................    i2c_start(); 
03C9:  BSF    20.4
03CA:  MOVF   20,W
03CB:  BSF    03.5
03CC:  MOVWF  07
03CD:  NOP
03CE:  BCF    03.5
03CF:  BSF    20.3
03D0:  MOVF   20,W
03D1:  BSF    03.5
03D2:  MOVWF  07
03D3:  NOP
03D4:  BCF    03.5
03D5:  BTFSS  07.3
03D6:  GOTO   3D5
03D7:  BCF    07.4
03D8:  BCF    20.4
03D9:  MOVF   20,W
03DA:  BSF    03.5
03DB:  MOVWF  07
03DC:  NOP
03DD:  BCF    03.5
03DE:  BCF    07.3
03DF:  BCF    20.3
03E0:  MOVF   20,W
03E1:  BSF    03.5
03E2:  MOVWF  07
....................    I2C_Write(0xAA); 
03E3:  MOVLW  AA
03E4:  BCF    03.5
03E5:  MOVWF  2B
03E6:  CALL   08C
....................     I2C_write(0x73); //pro 5LED 0x53 pro 7led 0x73 
03E7:  MOVLW  73
03E8:  MOVWF  2B
03E9:  CALL   08C
....................    i2c_stop(); 
03EA:  BCF    20.4
03EB:  MOVF   20,W
03EC:  BSF    03.5
03ED:  MOVWF  07
03EE:  NOP
03EF:  BCF    03.5
03F0:  BSF    20.3
03F1:  MOVF   20,W
03F2:  BSF    03.5
03F3:  MOVWF  07
03F4:  BCF    03.5
03F5:  BTFSS  07.3
03F6:  GOTO   3F5
03F7:  NOP
03F8:  GOTO   3F9
03F9:  NOP
03FA:  BSF    20.4
03FB:  MOVF   20,W
03FC:  BSF    03.5
03FD:  MOVWF  07
03FE:  NOP
....................     
....................  
.................... int i=64; 
03FF:  MOVLW  40
0400:  BCF    03.5
0401:  MOVWF  2A
.................... SOUCET=0; 
0402:  CLRF   24
0403:  CLRF   23
.................... SOUCET1=0; 
0404:  CLRF   26
0405:  CLRF   25
....................  
.................... /* 
....................  for (i=64;i<96;++i) 
.................... { 
....................    printf("%u\r\n",i); 
....................       i2c_stop();  
....................        
....................    i2c_start();//blockdata 
....................    I2C_Write(0xAA); 
....................    I2C_write(i); 
....................    
....................    i2c_start(); 
....................    I2C_Write(0xAB); 
....................    STAV1=I2C_read(0); 
....................    i2c_stop();    
....................             
....................    printf("STAV %lX \r\n", STAV1);    
....................    SOUCET=SOUCET+STAV1; 
....................    
....................     
....................     
....................     
....................     
.................... }  
.................... printf("SOUCET: %lX (procenta)\r\n", SOUCET); 
.................... SOUCET1=SOUCET; 
.................... SOUCET1=SOUCET1>>8; 
.................... printf("Deleno 256: %lX (procenta)\r\n", SOUCET1); 
.................... SOUCET1=SOUCET-SOUCET1; 
.................... printf("Soucet - soucet/256: %lX \r\n", SOUCET1); 
.................... LSB=(unsigned int8)SOUCET1;  
.................... printf("LSB: %lX\r\n", LSB); 
.................... //printf("Stav: %X (procenta)\r\n", STAV2); 
.................... */ 
....................  
.................... i2c_start();//blockdata 
0406:  BSF    20.4
0407:  MOVF   20,W
0408:  BSF    03.5
0409:  MOVWF  07
040A:  NOP
040B:  BCF    03.5
040C:  BSF    20.3
040D:  MOVF   20,W
040E:  BSF    03.5
040F:  MOVWF  07
0410:  NOP
0411:  BCF    03.5
0412:  BCF    07.4
0413:  BCF    20.4
0414:  MOVF   20,W
0415:  BSF    03.5
0416:  MOVWF  07
0417:  NOP
0418:  BCF    03.5
0419:  BCF    07.3
041A:  BCF    20.3
041B:  MOVF   20,W
041C:  BSF    03.5
041D:  MOVWF  07
....................    I2C_Write(0xAA); 
041E:  MOVLW  AA
041F:  BCF    03.5
0420:  MOVWF  2B
0421:  CALL   08C
....................    I2C_write(0x60); 
0422:  MOVLW  60
0423:  MOVWF  2B
0424:  CALL   08C
....................    
....................    i2c_start(); 
0425:  BSF    20.4
0426:  MOVF   20,W
0427:  BSF    03.5
0428:  MOVWF  07
0429:  NOP
042A:  BCF    03.5
042B:  BSF    20.3
042C:  MOVF   20,W
042D:  BSF    03.5
042E:  MOVWF  07
042F:  NOP
0430:  BCF    03.5
0431:  BTFSS  07.3
0432:  GOTO   431
0433:  BCF    07.4
0434:  BCF    20.4
0435:  MOVF   20,W
0436:  BSF    03.5
0437:  MOVWF  07
0438:  NOP
0439:  BCF    03.5
043A:  BCF    07.3
043B:  BCF    20.3
043C:  MOVF   20,W
043D:  BSF    03.5
043E:  MOVWF  07
....................    I2C_Write(0xAA); 
043F:  MOVLW  AA
0440:  BCF    03.5
0441:  MOVWF  2B
0442:  CALL   08C
....................    I2C_write(LSB); 
0443:  MOVF   27,W
0444:  MOVWF  2B
0445:  CALL   08C
....................    i2c_stop(); 
0446:  BCF    20.4
0447:  MOVF   20,W
0448:  BSF    03.5
0449:  MOVWF  07
044A:  NOP
044B:  BCF    03.5
044C:  BSF    20.3
044D:  MOVF   20,W
044E:  BSF    03.5
044F:  MOVWF  07
0450:  BCF    03.5
0451:  BTFSS  07.3
0452:  GOTO   451
0453:  NOP
0454:  GOTO   455
0455:  NOP
0456:  BSF    20.4
0457:  MOVF   20,W
0458:  BSF    03.5
0459:  MOVWF  07
045A:  NOP
045B:  BCF    03.5
....................  
.................... } 
....................  
.................... LSB=LSB+1; 
045C:  MOVLW  01
045D:  ADDWF  27,F
....................  
.................... delay_ms (100); 
045E:  MOVLW  64
045F:  MOVWF  2B
0460:  CALL   0D6
....................  }  
0461:  GOTO   20F
....................  } 
0462:  SLEEP

Configuration Fuses:
   Word  1: 2CF5   INTRC NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
